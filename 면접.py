import random
from gtts import gTTS
import playsound
from datetime import datetime
# 딕셔너리 데이터
data = {
    "기초": ["우리학과에 지원한 동기는 무엇인가요? ", "자기소개 부탁드립니다. ", "우리학과에 와서 무엇을 배우고 싶나요?"],
    "인성": [
                "자신이 지원한 학과에서 수학하기 위해 요구되는 학업 역량은 무엇이라고 생각하는지 말해주세요.",
                "지원한 전공에 가장 필수적인 고등학교 교과는 무엇이라고 생각합니까?",
                "좋아하는 과목과 그 과목을 잘하기 위해 사용한 공부법을 말해보세요.",
                "공부하기 가장 어려운 교과목은 무엇인가요?",
                "성적 향상을 위하여 어떤 노력을 하였나요?",
                "학습 과정에서 어려움에 부뒷혔던 경험과 극복하기 위해 어떤 노력을 했는지 설명해주세요.",
                "본인의 진로 목표를 달성하기 위하여 지금까지 노력한 점과 앞으로 계획하고 있는 것이 있다면 소개해보세요.",
                "지원 전공과 관련하여, 자신의 가장 우수한 역량은 무엇이라고 생각하는지, 어떠한 활동들을 통해서 그 역량을 키워왔는지 말해보세요.",
                "고등학교 수업 중 지원 전공과 관련해 가장 흥미로웠던 주제는 무엇인가요?",
                "학교 생활 중 지원 전공 또는 특정 분야에 몰두하여 최선을 다한 경험이나 사례가 있다면 말씀해보세요.",
                "대학 진학 후 전공 관련하여 하고 싶은 공부는 무엇인지, 졸업 후 관심 있는 전문 분야는 무엇인지 이유",
                "지원 전공과 관련하여 최근에 읽은 책이 있다면 간단하게 소개해보세요.",
                "리더십을 가장 잘 발휘한 활동을 구체적인 예를 들어 말해보세요.",
                "자기 주도적으로 선택하고 노력하여 성과를 냈던 경험이 있다면 말씀해 주세요.",
                "고등학교 재학 기간에 경험했던 교내 활동 중 본인 스스로 목표를 설정하고 계획을 실행한 사례를 상세히 말해보길 바랍니다.",
                "학업 외 활동 중 자신에게 가장 의미 있는 활동은 무엇이며 활동을 통해 배우고 느낀 점은 무엇인지 설명 부탁드립니다.",
                "주위 친구들과 협력하여 좋은 결과를 얻어낸 적이 있다면 본인이 한 역할에 대해 말해보세요.",
                "친구들과의 갈등 상황을 극복하고 해결한 과정이 무엇이었으며, 이를 통해 배우고 느낀 점을 말해주세요.",
                "지원자의 장점과 단점은 무엇인가요? 단점을 극복하기 위하여 어떤 노력을 하였나요?",
                "최근에 한 일 중에서 가장 보람되거나 성취감을 느낀 일을 말씀해보세요.",
                "성실하게 꾸준히 수행했던 일과 이를 통해 느낀 점을 말해보세요."
],
    "생기부": [" 여기에 입력 ", " 여기에 입력", " 여기에 입력 ", "여기에 입력"]
}


# TTS 함수
def speak(text):
    tts = gTTS(text, lang="ko")
    date_string = datetime.now().strftime("%d%m%Y%H%M%S")
    filename = "voice"+date_string+".mp3"
    tts.save(filename)
    playsound.playsound(filename)


# 카테고리별로 데이터 랜덤으로 선택하여 읽기
# 카테고리별로 데이터 랜덤으로 선택하여 읽기
def read_category(category):
    category_data = data[category]
    num_items_to_select = min(len(category_data), random.randint(2, 3))
    random_data = random.sample(category_data, num_items_to_select)
    for item in random_data:
        input("Enter를 눌러 {} 데이터 '{}'을 읽습니다...".format(category, item))
        speak(item)



# 메인 함수
def main():
    print("프로그램을 시작합니다.")

    input("Enter를 눌러 '기초' 카테고리 데이터를 읽습니다...")
    read_category("기초")

    input("Enter를 눌러 '인성' 카테고리 데이터를 읽습니다...")
    read_category("인성")

    input("Enter를 눌러 '생기부' 카테고리 데이터를 읽습니다...")
    read_category("생기부")

    print("프로그램을 종료합니다.")


if __name__ == "__main__":
    main()
